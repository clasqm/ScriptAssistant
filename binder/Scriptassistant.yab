#!yab
################################
############# Prologue #############
################################

//ScriptAssistant v0.2
//By Michel Clasquin-Johnson <clasqm@zoho.com>
//Instant help for command-line programs
//Public Domain software 2009, 2015

//Yabadabbadoo notification
########DO NOT RENAME THIS FILE!########
//Yabadabbadoo needs it to function.
 
 
//*************************
//*****Global Variables****
//*************************
 
## Technically, yab does not require you to declare global variables,
##It just is a really, really good idea to do it anyway.
// set DEBUG = 1 to print out all messages on the console
DEBUG = 1
//change this to DEBUG = 0 when you are ready to bind the program for distribution
 
tempdir$ = system$("finddir B_COMMON_TEMP_DIRECTORY") 
tempdir$ = left$(tempdir$, len(tempdir$)-1) //strip off trailing newline
tempfile$ = tempdir$ + "/ScriptAssistant.tmp"
displaywins=0
dispx=50: dispy=50
promode = 0 
 
 
 
##########################
######Preliminary Commands#####
##########################

## Commands to run before the Main Loop come here.
## e.g. setting up a window with a menu.
 
 //Read positions and Pro Mode setting from settings file 
	open #1,"/boot/home/config/settings/ScriptAssistant.settings", "a": close #1 //create the file if it does not exist
	open "/boot/home/config/settings/ScriptAssistant.settings" for reading as #1
	line input #1 across
	line input #1 updown
	line input #1 promode
	close #1
	if across = 0 or updown = 0 then //ie if the settings file was empty
		across = 100
		updown = 100
	endif
	acrossend = across + 200
	updownend = updown + 100
 
OpenWindow()

 
 
 
#######End of Prologue#######

dim msg$(1)
while(not leavingLoop)
	nCommands = token(message$, msg$(), "|")
	for everyCommand = 1 to nCommands
		if(instr(msg$(everyCommand), "_QuitRequested")) Leave()
		if(DEBUG and msg$(everyCommand)<>"") print msg$(everyCommand)
		if left$(msg$(everyCommand),7)="ProMode" then
			promode = val(right$(msg$(everyCommand),1))
			DropBox Select "ABC", 1
			Generate("A")
		endif
		if left$(msg$(everyCommand),4) ="CLI:" action$ = mid$(msg$(everyCommand),5)
		if left$(msg$(everyCommand),4) = "ABC:" Generate(right$(msg$(everyCommand),1))
		if msg$(everyCommand)="GoButton" Preview()
		//if left$(msg$(everyCommand),8) ="TryText:" action$ = mid$(msg$(everyCommand),9): ParseTry():Preview()
		//Would let the user type text then ENTER
		//but also activates when the user switches to a different widget - 
		//can't have windows opening when they feel like it
		if msg$(everyCommand)="TryButton" action$= TextControl Get$ "TryText": ParseTry(): Preview()
		if left$(msg$(everyCommand),2) = "XB" Window Close "W" + mid$(msg$(everyCommand),3): displaywins = displaywins -1
	next everyCommand
wend

CloseWindow()

end

sub CloseWindow()
	//when main loop exits, program continues here
	KillTemp()
	window close "MainWindow"
	//Unfortunately the child windows' names are randomly generated so we can't close them down neatly
	//Unless we write a database holding those names ... too much PT. Does yab not have a Windows Close "All" command?
	//Oh, well
	exit
end sub

sub Display(thestring$)
	local WindowID$, ButtonID$, TextID$,stamp$, startx, starty
	stamp$=system$("date +%s")
	WindowID$= "W" + stamp$: ButtonID$= "XB" + stamp$: TextID$= "T" + stamp$
	if lower$(left$(action$,10)) = "timeout 5 " action$ = mid$ (action$, len(action$) - 10) //remove timeout from window title
	Window Open dispx,dispy to dispx +600,dispy + 425, WindowID$, "Output of " + action$
	Window Set WindowID$, "Look","Floating"
	Window Set WindowID$, "Flags","Not-Resizable, Not-Zoomable, Not-Closable, Accept-First-Click"
	Button 270,395 to 330, 413, ButtonID$, "Close", WindowID$
	TextEdit 1,1 to 600,390, TextID$, 1,WindowID$
	TextEdit set TextID$, "editable", false
	TextEdit Add TextID$, thestring$
	dispx=dispx +20: dispy=dispy + 15
	displaywins=displaywins + 1
	if displaywins=6 dispx=50: dispy=50
end sub

sub Generate(label$)
	local counter,clicom$
	if promode = 1 then
		//restore label$ //that does not work so we go the long way round
		Switch label$
			case "7"
				restore Sevennorm: break
			case "A"
				restore A: break
			case "B"
				restore B: break
			case "C"
				restore C: break
			case "D"
				restore D: break
			case "E"
				restore E: break
			case "F"
				restore F: break
			case "G"
				restore G: break
			case "H"
				restore H: break
			case "I"
				restore I: break
			case "J"
				restore J: break
			case "K"
				restore K: break
			case "L"
				restore L: break
			case "M"
				restore M: break
			case "N"
				restore N: break
			case "O"
				restore O: break
			case "P"
				restore P: break
			case "Q"
				restore Q: break
			case "R"
				restore R: break
			case "S"
				restore S: break
			case "T"
				restore T: break
			case "U"
				restore U: break
			case "V"
				restore V: break
			case "W"
				restore W: break
			case "X"
				restore X: break
			case "Y"
				restore Y: break
			case "Z"
				restore Z: break
			default
				return
		end switch
	elseif promode= 0
		switch label$
			case "7"
				restore Sevennorm: break
			case "A"
				restore Anorm: break
			case "B"
				restore Bnorm: break
			case "C"
				restore Cnorm: break
			case "D"
				restore Dnorm: break
			case "E"
				restore Enorm: break
			case "F"
				restore Fnorm: break
			case "G"
				restore Gnorm: break
			case "H"
				restore Hnorm: break
			case "I"
				restore Inorm: break
			case "J"
				restore Jnorm: break
			case "K"
				restore Knorm: break
			case "L"
				restore Lnorm: break
			case "M"
				restore Mnorm: break
			case "N"
				restore Nnorm: break
			case "O"
				restore Onorm: break
			case "P"
				restore Pnorm: break
			case "Q"
				restore Qnorm: break
			case "R"
				restore Rnorm: break
			case "S"
				restore Snorm: break
			case "T"
				restore Tnorm: break
			case "U"
				restore Unorm: break
			case "V"
				restore Vnorm: break
			case "W"
				restore Wnorm: break
			case "X"
				restore Xnorm: break
			case "Y"
				restore Ynorm: break
			case "Z"
				restore Znorm: break
			default
				return
		end switch
	endif
	//Phew!
	DropBox Clear "CLI"
	read counter
	if counter=0 return //no entries starting with that letter - just a precaution
	for f = 1 to counter
		read clicom$
		DropBox Add "CLI", clicom$
	next f
		DropBox Select "CLI", 1
	action$= DropBox Get$ "CLI", 1
end sub

sub KillTemp()
	local dothis$
	dothis$ = "rm -f " + tempfile$
	system(dothis$)
end sub

sub Leave()
	across=Window Get "MainWindow", "Position-X"
	updown=Window Get "MainWindow", "Position-Y"
	open "/boot/home/config/settings/ScriptAssistant.settings" for writing as #1
		print #1 across
		print #1 updown
		print #1 promode
	close #1
	leavingLoop = true
end sub

sub OpenWindow()
// Setup the main window here
	window open across,updown to acrossend, updownend, "MainWindow", "ScriptAssistant"
	window set "MainWindow", "Look", "Floating"
	window set "MainWindow", "Flags", "Not-Resizable, Not-Zoomable"//, Accept-First-Click"
	Window set "MainWindow", "Workspace", "All"
	Draw Set "DejaVu Sans, Book, 12, regular, 0, 90.0", "MainWindow"
	//above prevents a mess caused by user changing his system fonts - my button labels barely fit, within a pixel!
//Top row of widgets
	view 1,1 to 120,39, "Radio","MainWindow"
	Draw Set "DejaVu Sans, Book, 12, regular, 0, 90.0", "Radio"
	Tooltip "Radio","Normal Mode: 165 common commands. \nPro Mode:\t Over 300 Commands.    "
	Radiobutton 3,0,"ProMode0","NormalMode", promode, "Radio"
	Radiobutton 3,18,"ProMode1","Pro Mode", promode, "Radio"
	if promode = 1 then
		RadioButton set "ProMode0", 0: RadioButton Set "ProMode1", 1
	else
		RadioButton set "ProMode0", 1: RadioButton Set "ProMode1", 0
	endif
//Middle row of widgets
	DropBox 0,40 to 39,65, "ABC", "", "MainWindow"
	Tooltip "ABC", "Select a command and press GO."
	DropBox Add "ABC", "7"
	for f = 1 to 26
		DropBox Add "ABC", chr$(f+64)
	next f
	DropBox 40,40 to 162,65, "CLI", "", "MainWindow"
	Tooltip "CLI", "Select a command and press GO."
	Generate("A")
	Button 163,40 to 199,65, "GoButton","GO","MainWindow"
	Tooltip "GoButton", "Select a command and press GO."
//Bottom row of widgets
	TextControl 0,70 to 162,97, "TryText","","","MainWindow"
	Button 163,70 to 199,94, "TryButton","TRY","MainWindow"
	ToolTip "TryText", "Enter a non-standard command and ScriptAssistant\nwill try running it with the --help parameter when\nyou press the TRY button."
	ToolTip "TryButton", "Enter a non-standard command and ScriptAssistant\nwill try running it with the --help parameter when\nyou press the TRY button."
end sub

sub ParseTry()
	action$ = trim$(action$)
	//trim off user-generated crud we don't need
	if lower$(right$(action$,7)) = " --help" action$ = left$ (action$, len(action$) - 7):action$ = trim$(action$)
	if lower$(right$(action$,3)) = " -h" action$ = left$ (action$, len(action$) - 3):action$ = trim$(action$)
	if lower$(right$(action$,3)) = " /?" action$ = left$ (action$, len(action$) - 3):action$ = trim$(action$)
	//now add our own parameter
	action$ = "timeout 5 " + action$ + " --help"
end sub

sub Preview()
	local thestring$, aline$
	//Exceptions
	if action$ = "less --help" system("/boot/system/apps/Terminal less --help &"): return
	//less presents its help in a man-like environment - does not come out correctly
	if action$ = "more --help" system("/boot/system/apps/Terminal more --help &"): return
	//more is like less <g>
	if action$ = "timeout 5  --help" return //user pressed TRY on an empty string
	if displaywins=12 alert "Only twelve Assistant windows\nallowed. Please close one.","OK","Warning": return
	system(action$ +" &> " + tempfile$)
	open tempfile$ for reading as #1
	while(not EOF(1))
		line input #1 aline$
		thestring$= thestring$ + aline$ + "\n"
	wend
	close #1
	Display(thestring$)
	KillTemp()
end sub

########################################
###DATA statements, if any, come here###
########################################


//==================
//SA Normal Mode data
//==================

label Sevennorm
Data 1
Data "7za"

label Anorm
Data 2
Data "addattr"
Data "alert" 

label Bnorm
Data 1
Data "basename --help"

label Cnorm
Data 17
Data "cat --help"
Data "cdda2wav --help"
Data "cdrecord --help"
Data "checkfs --help"
Data "chgrp --help"
Data "chmod --help"
Data "chop --help"
Data "chown --help"
Data "cksum --help"
Data "cmp --help"
Data "comm --help"
Data "copyattr --help"
Data "cp --help"
Data "csplit --help"
Data "ctags --help"
Data "curl --help"
Data "cut --help"

label Dnorm
Data 8
Data "date --help"
Data "dd --help"
Data "desklink"
Data "df --help"
Data "diff --help"
Data "diff3 --help"
Data "dirname --help"
Data "du --help"

Label Enorm
Data 6
Data "egrep --help"
Data "eject --help"
Data "env --help"
Data "error"
Data "expand --help"
Data "expr --help"

Label Fnorm
Data 9
Data "factor --help"
Data "fdinfo --help"
Data "fgrep --help"
Data "filepanel --help"
Data "find --help"
Data "finddir"
Data "fmt --help"
Data "fold --help"
Data "ftp -h"

Label Gnorm
Data 3
Data "getlimits --help"
Data"grep --help"
Data "groups --help"

Label Hnorm
Data 3
Data "head --help"
Data "hey"
Data "hostname --help"

Label Inorm
Data 3
Data "iconv --help"
Data "id --help"
Data "isvolume --help"

Label Jnorm
Data 1
Data "join --help"

Label Knorm
Data 2
Data "keymap --help"
Data "kill"

Label Lnorm
Data 11
Data "less --help"
Data "link --help"
Data "listattr"
Data "listdev --help"
Data "listusb --help"
Data "ln --help"
Data "locate --help"
Data "login --help"
Data "logname --help"
Data "ls --help"
Data "lsindex --help"

Label Mnorm
Data 15
Data "makebootable --help"
Data "md5sum --help"
Data "merge"
Data "mimeset --help"
Data "mkdir --help"
Data "mkdos"
Data "mkfifo --help"
Data "mkfs --help"
Data "mkindex"
Data "mkisofs --help"
Data "more --help"
Data "mount --help"
Data "mount_nfs --help"
Data "mountvolume --help"
Data "mv --help"

Label Nnorm
Data 3
Data "nano --help"
Data "nl --help"
Data "nohup --help"

Label Onorm
Data 1
Data "open"

Label Pnorm
Data 13
Data "package --help"
Data "paste --help"
Data "ping -h"
Data "play"
Data "playfile"
Data "playsound"
Data "playwav"
Data "pr --help"
Data "printenv --help"
Data "ps -h"
Data "ptx --help"
Data "pydoc --help"
Data "python -h"

Label Qnorm
Data 2
Data "query"
Data "quit"

Label Rnorm
Data 9
Data "rc --help"
Data "readlink --help"
Data "reindex --help"
Data "renice --help"
Data "rm --help"
Data "rmattr"
Data "rmdir --help"
Data "rmindex"
Data "rnano --help"

Label Snorm
Data 18
Data "screenmode --help"
Data "sed --help"
Data "seq --help"
Data "setdecor"
Data "settype --help"
Data "setversion"
Data "sftp --help"
Data "shutdown --help"
Data "sleep --help"
Data "sort --help"
Data "split --help"
Data "sqlite3 --help"
Data "stat --help"
Data "strings --help"
Data "su --help"
Data "sum --help"
Data "sync --help"
Data "sysinfo --help"

Label Tnorm
Data 13
Data "tac --help"
Data "tail --help"
Data "tee --help"
Data "telnet -h"
Data "timeout --help"
Data "top --help"
Data "touch --help"
Data "tr --help"
Data "traceroute --help"
Data "trash --help"
Data "truncate --help"
Data "tsort --help"
Data "tty --help"

Label Unorm
Data 9
Data "uname --help"
Data "unchop"
Data "uniq --help"
Data "unmount --help"
Data "untrash --help"
Data "unzip --help"
Data "unzipsfx --help"
Data "uptime --help"
Data "useradd --help"

Label Vnorm
Data 3
Data "vdir --help"
Data "version --help"
Data "vi --help"

Label Wnorm
Data 4
Data "waitfor"
Data "wc --help"
Data "wget --help"
Data "whoami --help"

Label Xnorm
Data 3
Data "xargs --help"
Data "xmlwf --help"
Data "xres  -help"

Label Ynorm
Data 1
Data "yes --help"

Label Znorm
Data 5
Data "zip"
Data "zipcloak -h"
Data "zipgrep --help"
Data "zipinfo --help"
Data "zipsplit -h"

// Dummy to preven OUT OF DATA error
data ""

//======================
//SA Pro mode data
//======================

label A
Data 8
Data "addattr"
Data "addr2line --help"
Data "alert"
Data "ar --help" 
Data "arp --help"
Data "as --help"
Data "autoconf --help"
Data "awk --help"

label B
Data 8
Data "base64 --help"
Data "basename --help"
Data "bash --help"
Data "bc --help"
Data "beep --help"
Data "bison --help"
Data "bunzip2 --help"
Data "bzip2 --help"

label C
Data 28
Data "c++ --help"
Data "c++filt --help"
Data "cal -h"
Data "cat --help"
Data "catattr"
Data "cc --help"
Data "cdda2wav --help"
Data "cdrecord --help"
Data "checkfs --help"
Data "chgrp --help"
Data "chmod --help"
Data "chop --help"
Data "chown --help"
Data "chroot --help"
Data "cksum --help"
Data "cmp --help"
Data "collectcatkeys --help"
Data "comm --help"
Data "compress -h"
Data "copyattr --help"
Data "cp --help"
Data "cpp --help"
Data "csplit --help"
Data "ctags --help"
Data "curl --help"
Data "curl-config --help"
Data "cut --help"
Data "cvs --help"

label D
Data 11
Data "date --help"
Data "dc --help"
Data "dd --help"
Data "desklink"
Data "devdump --help"
Data "df --help"
Data "diff --help"
Data "diff3 --help"
Data "dircolors --help"
Data "dirname --help"
Data "du --help"

Label E
Data 6
Data "egrep --help"
Data "eject --help"
Data "env --help"
Data "error"
Data "expand --help"
Data "expr --help"

Label F
Data 14
Data "factor --help"
Data "fdinfo --help"
Data "fgrep --help"
Data "filepanel --help"
Data "find --help"
Data "finddir"
Data "flex --help"
Data "fmt --help"
Data "fold --help"
Data "frcode --help"
Data "freetype-config --help"
Data "ftp -h"
Data "funzip --help"
Data "fwcontrol"

Label G
Data 15
Data "g++ --help"
Data "gawk --help"
Data "gcc --help"
Data "gcov --help"
Data "gdb --help"
Data "getlimits --help"
Data "git --help"
Data "git-receive-pack"
Data "git-upload-pack --help"
Data "gprof --help"
Data "grep --help"
Data "groups --help"
Data "gunzip --help"
Data "gzexe"
Data "gzip --help"

Label H
Data 5
Data "hd --help"
Data "head --help"
Data "hey"
Data "hg help"
Data "hostname --help"

Label I
Data 11
Data "i586-pc-haiku-gcc --help"
Data "iconv --help"
Data "id --help"
Data "ident --help"
Data "ifconfig --help"
Data "info --help"
Data "infokey --help"
Data "install --help"
Data "install-info --help"
Data "installsound --help"
Data "isvolume --help"

Label J
Data 1
Data "join --help"

Label K
Data 3
Data "kernel_debugger --help"
Data "keymap --help"
Data "kill"

Label L
Data 30
Data "ld --help"
Data "less --help"
Data "lessecho --help"
Data "lesskey --help"
Data "libtool --help"
Data "libtoolize --help"
Data "link --help"
Data "listattr"
Data "listdev --help"
Data "listres --help"
Data "listsem --help"
Data "listusb --help"
Data "ln --help"
Data "locate --help"
Data "logger -h"
Data "login --help"
Data "logname --help"
Data "ls --help"
Data "lsindex --help"
Data "lzcat --help"
Data "lzcmp --help"
Data "lzdiff --help"
Data "lzegrep --help"
Data "lzfgrep --help"
Data "lzgrep --help"
Data "lzless --help"
Data "lzma --help"
Data "lzmadec --help"
Data "lzmainfo --help"
Data "lzmore --help" 

Label M
Data 23
Data "m4 --help"
Data "make --help"
Data "makebootable --help"
Data "makeinfo --help"
Data "mbox2mail"
Data "md5sum --help"
Data "merge"
Data "message"
Data "mimeset --help"
Data "mkdepend --help"
Data "mkdir --help"
Data "mkdos"
Data "mkfifo --help"
Data "mkfs --help"
Data "mkhybrid --help"
Data "mkindex"
Data "mkisofs --help"
Data "modifiers --help"
Data "more --help"
Data "mount --help"
Data "mount_nfs --help"
Data "mountvolume --help"
Data "mv --help"

Label N
Data 6
Data "nano --help"
Data "neon-config --help"
Data "netstat --help"
Data "nl --help"
Data "nm --help"
Data "nohup --help"

Label O
Data 5
Data "objcopy --help"
Data "objdump --help"
Data "od --help"
Data "open"
Data "openssl --help"

Label P
Data 22
Data "package --help"
Data "paste --help"
Data "patch --help"
Data "pdftexi2dvi --help"
Data "perl --help"
Data "ping -h"
Data "ping6"
Data "play"
Data "playfile"
Data "playsound"
Data "playwav"
Data "pr --help"
Data "printenv --help"
Data "printf"
Data "prio --help"
Data "profile --help"
Data "protoize -h"
Data "ps -h"
Data "ptx --help"
Data "pydoc --help"
Data "python -h"
Data "python-config --help"

Label Q
Data 2
Data "query"
Data "quit"

Label R
Data 15
Data "ranlib --help"
Data "rc --help"
Data "readelf --help"
Data "readlink --help"
Data "reindex --help"
Data "release --help"
Data "renice --help"
Data "rlog"
Data "rm --help"
Data "rmattr"
Data "rmdir --help"
Data "rmindex"
Data "rnano --help"
Data "roster --help"
Data "route --help"

Label S
Data 39
Data "scp --help"
Data "screenmode --help"
Data "sed --help"
Data "seq --help"
Data "setdecor"
Data "setgcc --help"
Data "settype --help"
Data "setversion"
Data "setvolume --help"
Data "sftp --help"
Data "sftp-server -h"
Data "sh --help"
Data "sha1sum --help"
Data "shar --help"
Data "shred --help"
Data "shuf --help"
Data "shutdown --help"
Data "size --help"
Data "sleep --help"
Data "slogin --help"
Data "smtpd.py --help"
Data "sort --help"
Data "spamdbm --help"
Data "split --help"
Data "sqlite3 --help"
Data "ssh --help"
Data "ssh-keyscan --help"
Data "sshd -h"
Data "stat --help"
Data "strace --help"
Data "strings --help"
Data "strip --help"
Data "stty --help"
Data "su --help"
Data "sum --help"
Data "svn --help"
Data "svnsync --help"
Data "sync --help"
Data "sysinfo --help"

Label T
Data 20
Data "tac --help"
Data "tail --help"
Data "tar --help"
Data "tcpdump --help"
Data "tcptester -h"
Data "tee --help"
Data "telnet -h"
Data "texi2dvi --help"
Data "texindex"
Data "timeout --help"
Data "top --help"
Data "touch --help"
Data "tput --help"
Data "tr --help"
Data "traceroute --help"
Data "translate --help"
Data "trash --help"
Data "truncate --help"
Data "tsort --help"
Data "tty --help"

Label U
Data 19
Data "uname --help"
Data "unchop"
Data "unexpand --help"
Data "uniq --help"
Data "unlink --help"
Data "unlzma --help"
Data "unmount --help"
Data "unprotoize -h"
Data "unrar --help"
Data "unshar --help"
Data "untrash --help"
Data "unxz --help"
Data "unzip --help"
Data "unzipsfx --help"
Data "updatedb --help"
Data "uptime --help"
Data "useradd --help"
Data "uudecode --help"
Data "uuencode --help"

Label V
Data 4
Data "vdir --help"
Data "version --help"
Data "vmstat --help"
Data "vsyasm --help"

Label W
Data 5
Data "waitfor"
Data "watch --help"
Data "wc --help"
Data "wget --help"
Data "whoami --help"

Label X
Data 17
Data "xargs --help"
Data "xml2-config --help"
Data "xmlcatalog --help"
Data "xmllint --help"
Data "xmlwf --help"
Data "xres  -help"
Data "xsubpp"
Data "xz --help"
Data "xzcat --help"
Data "xzcmp --help"
Data "xzdec --help"
Data "xzdiff --help"
Data "xzegrep --help"
Data "xzfgrep --help"
Data "xzgrep --help"
Data "xzless --help"
Data "xzmore --help" 

Label Y
Data 3
Data "yacc --help"
Data "yasm --help"
Data "yes --help"

Label Z
Data 11
Data "zcat --help"
Data "zcmp --help"
Data "zdiff --help"
Data "zforce"
Data "zgrep --help"
Data "zip"
Data "zipcloak -h"
Data "zipgrep --help"
Data "zipinfo --help"
Data "zipsplit -h"
Data "znew --help"

// Dummy to preven OUT OF DATA error
data ""
